/*
  Ported to JavaScript by Lazar Laszlo 2011 
  
  lazarsoft@gmail.com, www.lazarsoft.info
  
*/

/*
*
* Copyright 2007 ZXing authors
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
function FinderPattern(e,t,n){this.x=e;this.y=t;this.count=1;this.estimatedModuleSize=n;this.__defineGetter__("EstimatedModuleSize",function(){return this.estimatedModuleSize});this.__defineGetter__("Count",function(){return this.count});this.__defineGetter__("X",function(){return this.x});this.__defineGetter__("Y",function(){return this.y});this.incrementCount=function(){this.count++};this.aboutEquals=function(e,t,n){if(Math.abs(t-this.y)<=e&&Math.abs(n-this.x)<=e){var r=Math.abs(e-this.estimatedModuleSize);return r<=1||r/this.estimatedModuleSize<=1}return false}}function FinderPatternInfo(e){this.bottomLeft=e[0];this.topLeft=e[1];this.topRight=e[2];this.__defineGetter__("BottomLeft",function(){return this.bottomLeft});this.__defineGetter__("TopLeft",function(){return this.topLeft});this.__defineGetter__("TopRight",function(){return this.topRight})}function FinderPatternFinder(){this.image=null;this.possibleCenters=[];this.hasSkipped=false;this.crossCheckStateCount=new Array(0,0,0,0,0);this.resultPointCallback=null;this.__defineGetter__("CrossCheckStateCount",function(){this.crossCheckStateCount[0]=0;this.crossCheckStateCount[1]=0;this.crossCheckStateCount[2]=0;this.crossCheckStateCount[3]=0;this.crossCheckStateCount[4]=0;return this.crossCheckStateCount});this.foundPatternCross=function(e){var t=0;for(var n=0;n<5;n++){var r=e[n];if(r==0){return false}t+=r}if(t<7){return false}var i=Math.floor((t<<INTEGER_MATH_SHIFT)/7);var s=Math.floor(i/2);return Math.abs(i-(e[0]<<INTEGER_MATH_SHIFT))<s&&Math.abs(i-(e[1]<<INTEGER_MATH_SHIFT))<s&&Math.abs(3*i-(e[2]<<INTEGER_MATH_SHIFT))<3*s&&Math.abs(i-(e[3]<<INTEGER_MATH_SHIFT))<s&&Math.abs(i-(e[4]<<INTEGER_MATH_SHIFT))<s};this.centerFromEnd=function(e,t){return t-e[4]-e[3]-e[2]/2};this.crossCheckVertical=function(e,t,n,r){var i=this.image;var s=qrcode.height;var o=this.CrossCheckStateCount;var u=e;while(u>=0&&i[t+u*qrcode.width]){o[2]++;u--}if(u<0){return NaN}while(u>=0&&!i[t+u*qrcode.width]&&o[1]<=n){o[1]++;u--}if(u<0||o[1]>n){return NaN}while(u>=0&&i[t+u*qrcode.width]&&o[0]<=n){o[0]++;u--}if(o[0]>n){return NaN}u=e+1;while(u<s&&i[t+u*qrcode.width]){o[2]++;u++}if(u==s){return NaN}while(u<s&&!i[t+u*qrcode.width]&&o[3]<n){o[3]++;u++}if(u==s||o[3]>=n){return NaN}while(u<s&&i[t+u*qrcode.width]&&o[4]<n){o[4]++;u++}if(o[4]>=n){return NaN}var a=o[0]+o[1]+o[2]+o[3]+o[4];if(5*Math.abs(a-r)>=2*r){return NaN}return this.foundPatternCross(o)?this.centerFromEnd(o,u):NaN};this.crossCheckHorizontal=function(e,t,n,r){var i=this.image;var s=qrcode.width;var o=this.CrossCheckStateCount;var u=e;while(u>=0&&i[u+t*qrcode.width]){o[2]++;u--}if(u<0){return NaN}while(u>=0&&!i[u+t*qrcode.width]&&o[1]<=n){o[1]++;u--}if(u<0||o[1]>n){return NaN}while(u>=0&&i[u+t*qrcode.width]&&o[0]<=n){o[0]++;u--}if(o[0]>n){return NaN}u=e+1;while(u<s&&i[u+t*qrcode.width]){o[2]++;u++}if(u==s){return NaN}while(u<s&&!i[u+t*qrcode.width]&&o[3]<n){o[3]++;u++}if(u==s||o[3]>=n){return NaN}while(u<s&&i[u+t*qrcode.width]&&o[4]<n){o[4]++;u++}if(o[4]>=n){return NaN}var a=o[0]+o[1]+o[2]+o[3]+o[4];if(5*Math.abs(a-r)>=r){return NaN}return this.foundPatternCross(o)?this.centerFromEnd(o,u):NaN};this.handlePossibleCenter=function(e,t,n){var r=e[0]+e[1]+e[2]+e[3]+e[4];var i=this.centerFromEnd(e,n);var s=this.crossCheckVertical(t,Math.floor(i),e[2],r);if(!isNaN(s)){i=this.crossCheckHorizontal(Math.floor(i),Math.floor(s),e[2],r);if(!isNaN(i)){var o=r/7;var u=false;var a=this.possibleCenters.length;for(var f=0;f<a;f++){var l=this.possibleCenters[f];if(l.aboutEquals(o,s,i)){l.incrementCount();u=true;break}}if(!u){var c=new FinderPattern(i,s,o);this.possibleCenters.push(c);if(this.resultPointCallback!=null){this.resultPointCallback.foundPossibleResultPoint(c)}}return true}}return false};this.selectBestPatterns=function(){var e=this.possibleCenters.length;if(e<3){throw"Couldn't find enough finder patterns"}if(e>3){var t=0;var n=0;for(var r=0;r<e;r++){var i=this.possibleCenters[r].EstimatedModuleSize;t+=i;n+=i*i}var s=t/e;this.possibleCenters.sort(function(e,t){var n=Math.abs(t.EstimatedModuleSize-s);var r=Math.abs(e.EstimatedModuleSize-s);if(n<r){return-1}else if(n==r){return 0}else{return 1}});var o=Math.sqrt(n/e-s*s);var u=Math.max(.2*s,o);for(var r=0;r<this.possibleCenters.length&&this.possibleCenters.length>3;r++){var a=this.possibleCenters[r];if(Math.abs(a.EstimatedModuleSize-s)>u){this.possibleCenters.remove(r);r--}}}if(this.possibleCenters.length>3){this.possibleCenters.sort(function(e,t){if(e.count>t.count){return-1}if(e.count<t.count){return 1}return 0})}return new Array(this.possibleCenters[0],this.possibleCenters[1],this.possibleCenters[2])};this.findRowSkip=function(){var e=this.possibleCenters.length;if(e<=1){return 0}var t=null;for(var n=0;n<e;n++){var r=this.possibleCenters[n];if(r.Count>=CENTER_QUORUM){if(t==null){t=r}else{this.hasSkipped=true;return Math.floor((Math.abs(t.X-r.X)-Math.abs(t.Y-r.Y))/2)}}}return 0};this.haveMultiplyConfirmedCenters=function(){var e=0;var t=0;var n=this.possibleCenters.length;for(var r=0;r<n;r++){var i=this.possibleCenters[r];if(i.Count>=CENTER_QUORUM){e++;t+=i.EstimatedModuleSize}}if(e<3){return false}var s=t/n;var o=0;for(var r=0;r<n;r++){i=this.possibleCenters[r];o+=Math.abs(i.EstimatedModuleSize-s)}return o<=.05*t};this.findFinderPattern=function(e){var t=false;this.image=e;var n=qrcode.height;var r=qrcode.width;var i=Math.floor(3*n/(4*MAX_MODULES));if(i<MIN_SKIP||t){i=MIN_SKIP}var s=false;var o=new Array(5);for(var u=i-1;u<n&&!s;u+=i){o[0]=0;o[1]=0;o[2]=0;o[3]=0;o[4]=0;var a=0;for(var f=0;f<r;f++){if(e[f+u*qrcode.width]){if((a&1)==1){a++}o[a]++}else{if((a&1)==0){if(a==4){if(this.foundPatternCross(o)){var l=this.handlePossibleCenter(o,u,f);if(l){i=2;if(this.hasSkipped){s=this.haveMultiplyConfirmedCenters()}else{var c=this.findRowSkip();if(c>o[2]){u+=c-o[2]-i;f=r-1}}}else{do{f++}while(f<r&&!e[f+u*qrcode.width]);f--}a=0;o[0]=0;o[1]=0;o[2]=0;o[3]=0;o[4]=0}else{o[0]=o[2];o[1]=o[3];o[2]=o[4];o[3]=1;o[4]=0;a=3}}else{o[++a]++}}else{o[a]++}}}if(this.foundPatternCross(o)){var l=this.handlePossibleCenter(o,u,r);if(l){i=o[0];if(this.hasSkipped){s=haveMultiplyConfirmedCenters()}}}}var h=this.selectBestPatterns();qrcode.orderBestPatterns(h);return new FinderPatternInfo(h)}}var MIN_SKIP=3;var MAX_MODULES=57;var INTEGER_MATH_SHIFT=8;var CENTER_QUORUM=2;qrcode.orderBestPatterns=function(e){function t(e,t){xDiff=e.X-t.X;yDiff=e.Y-t.Y;return Math.sqrt(xDiff*xDiff+yDiff*yDiff)}function n(e,t,n){var r=t.x;var i=t.y;return(n.x-r)*(e.y-i)-(n.y-i)*(e.x-r)}var r=t(e[0],e[1]);var i=t(e[1],e[2]);var s=t(e[0],e[2]);var o,u,a;if(i>=r&&i>=s){u=e[0];o=e[1];a=e[2]}else if(s>=i&&s>=r){u=e[1];o=e[0];a=e[2]}else{u=e[2];o=e[0];a=e[1]}if(n(o,u,a)<0){var f=o;o=a;a=f}e[0]=o;e[1]=u;e[2]=a}
